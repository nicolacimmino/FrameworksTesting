
digraph architecture {
  rankdir=LR;

  node[fillcolor="#FFEB3B" style="filled" fontcolor="black"];
    api_gateway[label="API Gateway"];

  node[fillcolor="#C8E6C9" style="filled" fontcolor="black"];
    tokens[label="Tokens Service"];
    users[label="Users Service"];
    user_assets[label="User Assets Service"];

  node[fillcolor="#CFD8DC" style="filled" fontcolor="black"];
    database[label="MongoDB"];
    config_server[label="Config Server"];
    service_registry[label="Service Registry"];

  subgraph edge_services {
      api_gateway -> tokens [label="POST\ntokens"]
      api_gateway -> users [label="GET,POST,PATCH\nusers"]
      api_gateway -> user_assets [label="GET,POST,DELETE\naccounts"]

      api_gateway -> service_registry
  }

  subgraph public_services {
      tokens -> {
        database
        config_server
        service_registry
      } [color="#fcad03"]

      users -> {
        database,
        config_server,
        service_registry
      } [color="#03fc8c"]

      user_assets -> {
        database,
        config_server,
        service_registry
      }  [color="#03adfc"]
  }

  subgraph inter_service {
    user_assets -> tokens [style=dashed, color=grey, label="validate token"]
    users -> tokens [style=dashed, color=grey, label="validate token"]
  }
}